package Trabalho;

import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

public class TicTacToe implements ActionListener{
//Parametros necessários para utilização da classe
	Random random = new Random();				//Utilizado para escolher o jogador inicial
	JFrame quadrojogo = new JFrame();			//Janela principal
	JPanel titulo = new JPanel();				//Titulo do jogo
	JPanel botoespainel = new JPanel();			//Painel das casas
	JLabel campodetexto = new JLabel();			//Indicador do turno
	JButton[] botoes = new JButton[9];			//As casas do jogo
	boolean turnojogador1;
	int contador;

	TicTacToe(){
		
		contador = 0;
		
		//Construtor principal da classe
		
		
		//Definições da exibição da janela principal - INICIO
		quadrojogo.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		quadrojogo.setSize(800,800);
		quadrojogo.getContentPane().setBackground(new Color(50,50,50));
		quadrojogo.setLayout(new BorderLayout());
		quadrojogo.setVisible(true);
		//Definições da exibição da janela principal - FINAL
		
		//Exibição do título
		campodetexto.setBackground(new Color(25,25,25));
		campodetexto.setForeground(new Color(25,255,0));
		campodetexto.setFont(new Font("Ink Free",Font.BOLD,75));
		campodetexto.setHorizontalAlignment(JLabel.CENTER);
		campodetexto.setText("Jogo da velha");
		campodetexto.setOpaque(true);
		titulo.setLayout(new BorderLayout());
		titulo.setBounds(0,0,800,100);
		titulo.add(campodetexto);
		
		//Layout do painel das casas
		botoespainel.setLayout(new GridLayout(3,3));
		botoespainel.setBackground(new Color(150,150,150));
		
		//Inclusão das casas no painel
		for(int i=0;i<9;i++) {
			botoes[i] = new JButton();
			botoespainel.add(botoes[i]);
			botoes[i].setFont(new Font("MV Boli",Font.BOLD,120));
			botoes[i].setFocusable(false);
			botoes[i].addActionListener(this);
		}
		
		quadrojogo.add(titulo,BorderLayout.NORTH);
		quadrojogo.add(botoespainel);
		
		primeiroTurno();	//Inicio do jogo
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		//Sobrecarga do método herdado da classe pai
		
		//Verifica qual botão foi clicado e executa a ação de jogada
		for(int i=0;i<9;i++) {
			if(e.getSource()==botoes[i]) {
				if(turnojogador1) { 				//Verifica o jogador atual
					if(botoes[i].getText()=="") {   //Verifica se a casa está vazia
						botoes[i].setForeground(new Color(255,0,0));
						botoes[i].setText("X");
						turnojogador1=false;
						campodetexto.setText("Turno do O");
						check(); //Verificação vitória
					}
				}
				else {
					if(botoes[i].getText()=="") {
						botoes[i].setForeground(new Color(0,0,255));
						botoes[i].setText("O");
						turnojogador1=true;
						campodetexto.setText("Turno do X");
						check(); //Verificação de vitória
					}
				}
			}			
		}
	}
	
	//
	public void primeiroTurno() {
		
		/*try {
			Thread.sleep(100);
		} catch (InterruptedException e) {			
			e.printStackTrace();
		}*/
		
		if(random.nextInt(2)==0) {
			turnojogador1=true;
			campodetexto.setText("Turno do X");
		}
		else {
			turnojogador1=false;
			campodetexto.setText("Turno do O");
		}
	}
	
	public void check() {
		//Contar o número de jogadas para ver se o jogo finalizou
		contador++;
		if(contador<9) {
			
		//Condições de vitória X
			if(
					(botoes[0].getText()=="X") &&
					(botoes[1].getText()=="X") &&
					(botoes[2].getText()=="X")
					) {
				xVitoria(0,1,2);
			}
			if(
					(botoes[3].getText()=="X") &&
					(botoes[4].getText()=="X") &&
					(botoes[5].getText()=="X")
					) {
				xVitoria(3,4,5);
			}
			if(
					(botoes[6].getText()=="X") &&
					(botoes[7].getText()=="X") &&
					(botoes[8].getText()=="X")
					) {
				xVitoria(6,7,8);
			}
			if(
					(botoes[0].getText()=="X") &&
					(botoes[3].getText()=="X") &&
					(botoes[6].getText()=="X")
					) {
				xVitoria(0,3,6);
			}
			if(
					(botoes[1].getText()=="X") &&
					(botoes[4].getText()=="X") &&
					(botoes[7].getText()=="X")
					) {
				xVitoria(1,4,7);
			}
			if(
					(botoes[2].getText()=="X") &&
					(botoes[5].getText()=="X") &&
					(botoes[8].getText()=="X")
					) {
				xVitoria(2,5,8);
			}
			if(
					(botoes[0].getText()=="X") &&
					(botoes[4].getText()=="X") &&
					(botoes[8].getText()=="X")
					) {
				xVitoria(0,4,8);
			}
			if(
					(botoes[2].getText()=="X") &&
					(botoes[4].getText()=="X") &&
					(botoes[6].getText()=="X")
					) {
				xVitoria(2,4,6);
			}
		//Condições de vitória O
			if(
					(botoes[0].getText()=="O") &&
					(botoes[1].getText()=="O") &&
					(botoes[2].getText()=="O")
					) {
				oVitoria(0,1,2);
			}
			if(
					(botoes[3].getText()=="O") &&
					(botoes[4].getText()=="O") &&
					(botoes[5].getText()=="O")
					) {
				oVitoria(3,4,5);
			}
			if(
					(botoes[6].getText()=="O") &&
					(botoes[7].getText()=="O") &&
					(botoes[8].getText()=="O")
					) {
				oVitoria(6,7,8);
			}
			if(
					(botoes[0].getText()=="O") &&
					(botoes[3].getText()=="O") &&
					(botoes[6].getText()=="O")
					) {
				oVitoria(0,3,6);
			}
			if(
					(botoes[1].getText()=="O") &&
					(botoes[4].getText()=="O") &&
					(botoes[7].getText()=="O")
					) {
				oVitoria(1,4,7);
			}
			if(
					(botoes[2].getText()=="O") &&
					(botoes[5].getText()=="O") &&
					(botoes[8].getText()=="O")
					) {
				oVitoria(2,5,8);
			}
			if(
					(botoes[0].getText()=="O") &&
					(botoes[4].getText()=="O") &&
					(botoes[8].getText()=="O")
					) {
				oVitoria(0,4,8);
			}
			if(
					(botoes[2].getText()=="O") &&
					(botoes[4].getText()=="O") &&
					(botoes[6].getText()=="O")
					) {
				oVitoria(2,4,6);
			}
		} else{//Condição de empate
			campodetexto.setText("Empate");
			reset();
			
		}
	}
	//Ilustra a vitória do jogador X na tela
	public void xVitoria(int a,int b,int c) {
		botoes[a].setBackground(Color.GREEN);
		botoes[b].setBackground(Color.GREEN);
		botoes[c].setBackground(Color.GREEN);
		
		for(int i=0;i<9;i++) {
			botoes[i].setEnabled(false);
		}
		campodetexto.setText("X Ganhou");
		reset();
	}
	//Ilustra a vitória do jogador O na tela
	public void oVitoria(int a,int b,int c) {
		botoes[a].setBackground(Color.GREEN);
		botoes[b].setBackground(Color.GREEN);
		botoes[c].setBackground(Color.GREEN);
		
		for(int i=0;i<9;i++) {
			botoes[i].setEnabled(false);
		}
		campodetexto.setText("O Ganhou");
		reset();
	}
	
	//Método auxiliar para reiniciar o jogo
	public void reset () {
		 
		 int click = JOptionPane.showConfirmDialog(null, "Deseja Reiniciar?");
		 
		 switch(click) {
		 case 0:{
			 quadrojogo.dispose();
			 new TicTacToe();
			 break;
		 }
		 case 1:{System.exit(0);}
		 default:{}
		 }
		 
	}
	
}

///////////////////////////////////////////////////////////

package Trabalho;

public class Main {

	public static void main(String[] args) {
		
		TicTacToe tictactoe = new TicTacToe();
		
	}

}


